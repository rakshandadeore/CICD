name: Create and Push Incremental Tag on Main Branch

on:
  push:
    branches:
      - main

jobs:
  create-tag:
    runs-on: self-hosted
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git configuration
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Get the latest tag or set default
        id: get_latest_tag
        run: |
          # Get the latest tag from the repository
          LATEST_TAG=$(git tag -l 'USSFence[*]' | sort -V | tail -n 1)
          
          # If no tags exist, set the default tag
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="USSFence[1.0.0.0]"
          fi

          echo "Latest tag found: $LATEST_TAG"

          # Extract version number and increment it
          VERSION_PARTS=$(echo $LATEST_TAG | sed 's/^USSFence\[\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\)\]$/\1/')
          
          if [ -z "$VERSION_PARTS" ]; then
            echo "Error: Could not parse version from tag $LATEST_TAG"
            exit 1
          fi

          # Split version into parts (major, minor, patch, build)
          IFS='.' read -r -a VERSION_ARRAY <<< "$VERSION_PARTS"
          
          # Increment the build number (last part) to generate the next version
          BUILD_NUM=${VERSION_ARRAY[3]}
          BUILD_NUM=$((BUILD_NUM + 1))

          # Construct the new tag with incremented build number
          NEW_TAG="USSFence[${VERSION_ARRAY[0]}.${VERSION_ARRAY[1]}.${VERSION_ARRAY[2]}.$BUILD_NUM]"
          
          echo "New tag to create: $NEW_TAG"
          echo "::set-output name=new_tag::$NEW_TAG"

      - name: Create a new tag
        run: |
          NEW_TAG="${{ steps.get_latest_tag.outputs.new_tag }}"
          git tag $NEW_TAG
          echo "Tag created: $NEW_TAG"

      - name: Push the new tag to the repository
        run: |
          NEW_TAG="${{ steps.get_latest_tag.outputs.new_tag }}"
          git push origin $NEW_TAG
